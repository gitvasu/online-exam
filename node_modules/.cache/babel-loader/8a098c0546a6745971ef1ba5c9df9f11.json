{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasu.gupta\\\\UnUsed\\\\Documents\\\\online-test\\\\src\\\\components\\\\register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { cleanSession, isRegistered } from \"../utils/sessionManagement\";\nimport MemoizedHeader from \"./header\";\n\nconst Register = () => {\n  _s();\n\n  const [registerDetails, setregisterDetails] = useState({\n    \"emp-code\": \"\",\n    name: \"\"\n  });\n  const [detailsValidate, setDetailsValidate] = useState({});\n  const history = useHistory();\n\n  function handleChange(e) {\n    setregisterDetails({ ...registerDetails,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit() {\n    cleanSession();\n    setDetailsValidate({});\n    const detailsCount = Object.keys(registerDetails).length;\n\n    if (detailsCount === 0 || detailsCount < 2) {\n      toast.warn(\"Please fill in all the fields\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: 5000,\n        toastId: \"filldetails\"\n      });\n      return;\n    }\n\n    for (let key in registerDetails) {\n      if (!registerDetails[key].trim()) {\n        setDetailsValidate({ ...detailsValidate,\n          [key]: true\n        });\n        return;\n      }\n    }\n\n    if (Object.keys(detailsValidate).length !== 0) return;\n    localStorage.setItem(\"ONLINE_EXAM_SESSION\", JSON.stringify({\n      user: {\n        empCode: registerDetails[\"emp-code\"],\n        name: registerDetails[\"name\"]\n      }\n    }));\n    history.push({\n      pathname: \"/exam-info\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MemoizedHeader, {\n    isRegistered: isRegistered(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section register-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emp-code\",\n    className: \"register-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Employee Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"register-input\",\n    value: registerDetails[\"emp-code\"],\n    type: \"text\",\n    name: \"emp-code\",\n    id: \"input-emp-code\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), detailsValidate[\"emp-code\"] && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Invalid Employee code\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"register-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"register-input\",\n    value: registerDetails[\"name\"],\n    type: \"text\",\n    name: \"name\",\n    id: \"input-name\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), detailsValidate[\"name\"] && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, \"Invalid name\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"register-submit-btn\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Register\"))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Register, \"JYr07e5mz77QQ6RoxQHbb/QfeOI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/vasu.gupta/UnUsed/Documents/online-test/src/components/register.jsx"],"names":["React","useState","useHistory","toast","ToastContainer","cleanSession","isRegistered","MemoizedHeader","Register","registerDetails","setregisterDetails","name","detailsValidate","setDetailsValidate","history","handleChange","e","target","value","handleSubmit","detailsCount","Object","keys","length","warn","position","POSITION","BOTTOM_CENTER","autoClose","toastId","key","trim","localStorage","setItem","JSON","stringify","user","empCode","push","pathname"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { cleanSession, isRegistered } from \"../utils/sessionManagement\";\r\nimport MemoizedHeader from \"./header\";\r\n\r\nconst Register = () => {\r\n  const [registerDetails, setregisterDetails] = useState({\r\n    \"emp-code\": \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const [detailsValidate, setDetailsValidate] = useState({});\r\n\r\n  const history = useHistory();\r\n\r\n  function handleChange(e) {\r\n    setregisterDetails({ ...registerDetails, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit() {\r\n    cleanSession();\r\n    setDetailsValidate({});\r\n\r\n    const detailsCount = Object.keys(registerDetails).length;\r\n\r\n    if (detailsCount === 0 || detailsCount < 2) {\r\n      toast.warn(\"Please fill in all the fields\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: 5000,\r\n        toastId: \"filldetails\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    for (let key in registerDetails) {\r\n      if (!registerDetails[key].trim()) {\r\n        setDetailsValidate({ ...detailsValidate, [key]: true });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (Object.keys(detailsValidate).length !== 0) return;\r\n\r\n    localStorage.setItem(\r\n      \"ONLINE_EXAM_SESSION\",\r\n      JSON.stringify({\r\n        user: {\r\n          empCode: registerDetails[\"emp-code\"],\r\n          name: registerDetails[\"name\"],\r\n        },\r\n      })\r\n    );\r\n\r\n    history.push({ pathname: \"/exam-info\" });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MemoizedHeader isRegistered={isRegistered()} />\r\n      <div className=\"section register-section\">\r\n        <form className=\"register-form\">\r\n          <h2>Register</h2>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"emp-code\" className=\"register-label\">\r\n              Employee Code\r\n            </label>\r\n            <input\r\n              className=\"register-input\"\r\n              value={registerDetails[\"emp-code\"]}\r\n              type=\"text\"\r\n              name=\"emp-code\"\r\n              id=\"input-emp-code\"\r\n              onChange={handleChange}\r\n              required={true}\r\n            />\r\n            {detailsValidate[\"emp-code\"] && (\r\n              <small>Invalid Employee code</small>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\" className=\"register-label\">\r\n              Name\r\n            </label>\r\n            <input\r\n              className=\"register-input\"\r\n              value={registerDetails[\"name\"]}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"input-name\"\r\n              onChange={handleChange}\r\n              required={true}\r\n            />\r\n            {detailsValidate[\"name\"] && <small>Invalid name</small>}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"register-submit-btn\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}