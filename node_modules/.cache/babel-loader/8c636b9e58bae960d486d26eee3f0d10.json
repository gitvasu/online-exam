{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasu.gupta\\\\UnUsed\\\\Documents\\\\online-test\\\\src\\\\components\\\\testReport.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AnswerStatus, quesConst } from \"../constantValues\";\nimport { getAnsweredChoices, getAttemptCount } from \"../utils/questionsUtil\";\nimport { cleanSession, getTestState, isRegistered } from \"../utils/sessionManagement\";\nimport MemoizedHeader from \"./header\";\n\nconst TestReport = () => {\n  _s();\n\n  const [hrefFile, setHrefFile] = useState(\"\");\n  const [testSummary, setTestSummary] = useState({});\n  const history = useHistory();\n\n  function takeTestAgain() {\n    cleanSession();\n    history.push(\"/register\");\n  }\n\n  useEffect(() => {\n    const answeredSheet = getTestState();\n    let skillLevel;\n\n    switch (parseInt(answeredSheet.skillLevel)) {\n      case quesConst.BEGINNER:\n        skillLevel = \"Beginner\";\n        break;\n\n      case quesConst.INTERMEDIATE:\n        skillLevel = \"Intermediate\";\n        break;\n\n      case quesConst.ADVANCE:\n        skillLevel = \"Advance\";\n        break;\n\n      default:\n        skillLevel = \"Beginner\";\n    }\n\n    let testReport = {\n      \"Test-Level\": skillLevel,\n      \"Total-Score\": 0,\n      \"Your-Responses\": []\n    };\n    testReport[\"Ques-Attempted\"] = getAttemptCount(answeredSheet[\"attempts\"]);\n    testReport[\"Truly-Correct\"] = 0;\n    testReport[\"Partially-Correct\"] = 0;\n    testReport[\"Incorrect\"] = 0;\n    testReport[\"Your-Responses\"] = answeredSheet[\"attempts\"].map(ques => {\n      const answerInfo = getAnsweredChoices(ques);\n\n      if (answerInfo.status === AnswerStatus.CORRRECT) {\n        testReport[\"Truly-Correct\"]++;\n        answerInfo.status = \"Truly correct\";\n      } else if (answerInfo.status === AnswerStatus.PARTIALLY_CORRECT) {\n        testReport[\"Partially-Correct\"]++;\n        answerInfo.status = \"Partially correct\";\n      } else {\n        testReport[\"Incorrect\"]++;\n        answerInfo.status = \"Incorrect\";\n      }\n\n      testReport[\"Total-Score\"] += answerInfo.score;\n      return {\n        Question: ques[\"title\"],\n        \"Your-Answers\": answerInfo.yourAns,\n        \"Correct-Answers\": answerInfo.realAns,\n        Answered: answerInfo.isAnswered ? \"Yes\" : \"No\",\n        Status: answerInfo.status,\n        Score: answerInfo.score\n      };\n    });\n    setTestSummary(testReport);\n    const json = JSON.stringify(testReport);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const href = URL.createObjectURL(blob);\n    setHrefFile(href);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MemoizedHeader, {\n    isRegistered: isRegistered(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-report-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-report-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Test result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Test Level:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, testSummary[\"Test-Level\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Your score:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, testSummary[\"Total-Score\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Max score:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, Object.keys(testSummary).length > 0 && testSummary[\"Your-Responses\"].length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Questions attempted:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, testSummary[\"Ques-Attempted\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Truly correct answers:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, testSummary[\"Truly-Correct\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Paritally correct answers:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, testSummary[\"Partially-Correct\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Incorrect answers:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, testSummary[\"Incorrect\"]))), /*#__PURE__*/React.createElement(\"a\", {\n    href: hrefFile,\n    download: \"TestReport.json\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    id: \"download-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Download test result\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: takeTestAgain,\n    className: \"test-again\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Take test again\"))));\n};\n\n_s(TestReport, \"VK6FYolDVcQoyMRXWM83edxCeEo=\", false, function () {\n  return [useHistory];\n});\n\n_c = TestReport;\nexport default TestReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestReport\");","map":{"version":3,"sources":["C:/Users/vasu.gupta/UnUsed/Documents/online-test/src/components/testReport.jsx"],"names":["React","useEffect","useState","useHistory","AnswerStatus","quesConst","getAnsweredChoices","getAttemptCount","cleanSession","getTestState","isRegistered","MemoizedHeader","TestReport","hrefFile","setHrefFile","testSummary","setTestSummary","history","takeTestAgain","push","answeredSheet","skillLevel","parseInt","BEGINNER","INTERMEDIATE","ADVANCE","testReport","map","ques","answerInfo","status","CORRRECT","PARTIALLY_CORRECT","score","Question","yourAns","realAns","Answered","isAnswered","Status","Score","json","JSON","stringify","blob","Blob","type","href","URL","createObjectURL","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AnswerStatus, quesConst } from \"../constantValues\";\r\nimport { getAnsweredChoices, getAttemptCount } from \"../utils/questionsUtil\";\r\nimport {\r\n  cleanSession,\r\n  getTestState,\r\n  isRegistered,\r\n} from \"../utils/sessionManagement\";\r\nimport MemoizedHeader from \"./header\";\r\n\r\nconst TestReport = () => {\r\n  const [hrefFile, setHrefFile] = useState(\"\");\r\n  const [testSummary, setTestSummary] = useState({});\r\n\r\n  const history = useHistory();\r\n\r\n  function takeTestAgain() {\r\n    cleanSession();\r\n    history.push(\"/register\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const answeredSheet = getTestState();\r\n\r\n    let skillLevel;\r\n\r\n    switch (parseInt(answeredSheet.skillLevel)) {\r\n      case quesConst.BEGINNER:\r\n        skillLevel = \"Beginner\";\r\n        break;\r\n      case quesConst.INTERMEDIATE:\r\n        skillLevel = \"Intermediate\";\r\n        break;\r\n      case quesConst.ADVANCE:\r\n        skillLevel = \"Advance\";\r\n        break;\r\n      default:\r\n        skillLevel = \"Beginner\";\r\n    }\r\n\r\n    let testReport = {\r\n      \"Test-Level\": skillLevel,\r\n      \"Total-Score\": 0,\r\n      \"Your-Responses\": [],\r\n    };\r\n\r\n    testReport[\"Ques-Attempted\"] = getAttemptCount(answeredSheet[\"attempts\"]);\r\n    testReport[\"Truly-Correct\"] = 0;\r\n    testReport[\"Partially-Correct\"] = 0;\r\n    testReport[\"Incorrect\"] = 0;\r\n    testReport[\"Your-Responses\"] = answeredSheet[\"attempts\"].map((ques) => {\r\n      const answerInfo = getAnsweredChoices(ques);\r\n\r\n      if (answerInfo.status === AnswerStatus.CORRRECT) {\r\n        testReport[\"Truly-Correct\"]++;\r\n        answerInfo.status = \"Truly correct\";\r\n      } else if (answerInfo.status === AnswerStatus.PARTIALLY_CORRECT) {\r\n        testReport[\"Partially-Correct\"]++;\r\n        answerInfo.status = \"Partially correct\";\r\n      } else {\r\n        testReport[\"Incorrect\"]++;\r\n        answerInfo.status = \"Incorrect\";\r\n      }\r\n\r\n      testReport[\"Total-Score\"] += answerInfo.score;\r\n      return {\r\n        Question: ques[\"title\"],\r\n        \"Your-Answers\": answerInfo.yourAns,\r\n        \"Correct-Answers\": answerInfo.realAns,\r\n        Answered: answerInfo.isAnswered ? \"Yes\" : \"No\",\r\n        Status: answerInfo.status,\r\n        Score: answerInfo.score,\r\n      };\r\n    });\r\n\r\n    setTestSummary(testReport);\r\n\r\n    const json = JSON.stringify(testReport);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const href = URL.createObjectURL(blob);\r\n    setHrefFile(href);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MemoizedHeader isRegistered={isRegistered()} />\r\n      <div className=\"test-report-bg\">\r\n        <div className=\"test-report-container\">\r\n          <h2>Test result</h2>\r\n          <div className=\"summary\">\r\n            <div className=\"row\">\r\n              <p className=\"label\">Test Level:</p>\r\n              <p>{testSummary[\"Test-Level\"]}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"label\">Your score:</p>\r\n              <p>{testSummary[\"Total-Score\"]}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"label\">Max score:</p>\r\n              <p>\r\n                {Object.keys(testSummary).length > 0 &&\r\n                  testSummary[\"Your-Responses\"].length}\r\n              </p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"label\">Questions attempted:</p>\r\n              <p>{testSummary[\"Ques-Attempted\"]}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"label\">Truly correct answers:</p>\r\n              <p>{testSummary[\"Truly-Correct\"]}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"label\">Paritally correct answers:</p>\r\n              <p>{testSummary[\"Partially-Correct\"]}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"label\">Incorrect answers:</p>\r\n              <p>{testSummary[\"Incorrect\"]}</p>\r\n            </div>\r\n          </div>\r\n          <a\r\n            href={hrefFile}\r\n            download={\"TestReport.json\"}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            id=\"download-link\"\r\n          >\r\n            Download test result\r\n          </a>\r\n          <button onClick={takeTestAgain} className=\"test-again\">\r\n            Take test again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestReport;\r\n"]},"metadata":{},"sourceType":"module"}